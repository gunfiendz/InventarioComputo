@page "{handler?}/{id:int?}"
@model FormularioModel
@{
    ViewData["Title"] = Model.Modo == "Crear" ? "Nuevo Equipo" :
                        Model.Modo == "Editar" ? "Editar Equipo" : "Ver Equipo";
    Layout = "_LayoutGeneral";

    bool esModoLectura = Model.Modo == "Ver";
}

<div class="container-form">
    <h1 class="beige-text"><i class="fas fa-laptop"></i> @ViewData["Title"]</h1>

    <form method="post" class="form-beige">
        <input type="hidden" asp-for="Equipo.IdActivoFijo" />

        <div class="form-group">
            <label asp-for="Equipo.NumeroSerie" class="form-label"></label>
            <input asp-for="Equipo.NumeroSerie" class="form-control" readonly="@esModoLectura" />
            <span asp-validation-for="Equipo.NumeroSerie" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label asp-for="Equipo.EtiquetaInv" class="form-label"></label>
            <input asp-for="Equipo.EtiquetaInv" class="form-control" readonly="@esModoLectura" />
            <span asp-validation-for="Equipo.EtiquetaInv" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label asp-for="Equipo.IdTipoEquipo" class="form-label">Tipo de Equipo</label>
            <select asp-for="Equipo.IdTipoEquipo" class="form-control input-beige"
                    id="tipoEquipo" disabled="@(Model.Modo == "Ver")">
                <option value="">-- Seleccione un tipo --</option>
                @foreach (var tipo in Model.TiposEquipos)
                {
                    <option value="@tipo.Id"
                            selected="@(tipo.Id == Model.Equipo?.IdTipoEquipo)">
                        @tipo.Nombre
                    </option>
                }
            </select>
            <span asp-validation-for="Equipo.IdTipoEquipo" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label class="form-label">Marca</label>
            <select class="form-control input-beige" id="marca">
                @if (Model.Equipo?.IdMarca.HasValue == true && Model.Marcas?.Any() == true)
                {
                    <option value="@Model.Equipo.IdMarca" selected>
                        @Model.Marcas.First(m => m.Id == Model.Equipo.IdMarca).Nombre
                    </option>
                }
                else
                {
                    <option value="">-- Seleccione un tipo primero --</option>
                }
            </select>
        </div>

        <div class="form-group">
            <label asp-for="Equipo.IdModelo" class="form-label">Modelo</label>
            <select asp-for="Equipo.IdModelo" class="form-control input-beige" id="modelo">
                @if (Model.Equipo?.IdModelo > 0 && Model.Modelos?.Any() == true)
                {
                    <option value="@Model.Equipo.IdModelo" selected>
                        @Model.Modelos.First(m => m.Id == Model.Equipo.IdModelo).Nombre
                    </option>
                }
                else
                {
                    <option value="">-- Seleccione una marca primero --</option>
                }
            </select>
            <span asp-validation-for="Equipo.IdModelo" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label asp-for="Equipo.FechaCompra" class="form-label"></label>
            <input asp-for="Equipo.FechaCompra" type="date" class="form-control" readonly="@esModoLectura">
            <span asp-validation-for="Equipo.FechaCompra" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label asp-for="Equipo.Garantia" class="form-label"></label>
            <input asp-for="Equipo.Garantia" class="form-control" readonly="@esModoLectura" />
            <span asp-validation-for="Equipo.Garantia" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label asp-for="Equipo.IdSucursal" class="form-label"></label>
            <select asp-for="Equipo.IdSucursal" class="form-control input-beige" disabled="@esModoLectura">
                <option value="">-- Seleccione una sucursal --</option>
                @foreach (var sucursal in Model.Sucursales)
                {
                    <option value="@sucursal.Id">@sucursal.Nombre</option>
                }
            </select>
            <span asp-validation-for="Equipo.IdSucursal" class="text-danger"></span>
        </div>

        <input type="hidden" asp-for="Equipo.IdEstado" />

        @if (!esModoLectura)
        {
            <div class="form-actions">
                <button type="submit" class="btn btn-beige">Guardar</button>
                <a href="/Inventario" class="btn btn-cancelar">Cancelar</a>
            </div>
        }
        else
        {
            <div class="form-actions">
                <a href="/Inventario/Editar/@Model.Equipo.IdActivoFijo" class="btn btn-beige">Editar</a>
                <a href="/Inventario" class="btn btn-cancelar">Volver</a>
            </div>
        }
    </form>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const esModoLectura = '@Model.Modo' === 'Ver';

            if (!esModoLectura) {
                document.getElementById('tipoEquipo').addEventListener('change', cargarMarcas);
                document.getElementById('marca').addEventListener('change', cargarModelos);

                if (tipoSelect.value) {
                    cargarMarcas().then(() => {
                        if (marcaSelect.value) {
                            cargarModelos();
                        }
                    });
                }
            } else {
                const tipoSelect = document.getElementById('tipoEquipo');
                const marcaSelect = document.getElementById('marca');
                const modeloSelect = document.getElementById('modelo');

                tipoSelect.disabled = esModoLectura;

                marcaSelect.disabled = esModoLectura || !esModoLectura && !tipoSelect.value;

                modeloSelect.disabled = esModoLectura || !esModoLectura && !marcaSelect.value;
            }
            
        });

        async function cargarMarcas() {
            const tipoId = document.getElementById('tipoEquipo').value;
            const marcaDropdown = document.getElementById('marca');
            const modeloDropdown = document.getElementById('modelo');

            if (!tipoId) {
                resetDropdown(marcaDropdown, '-- Seleccione un tipo primero --');
                resetDropdown(modeloDropdown, '-- Seleccione una marca primero --');
                return;
            }

            try {
                showLoading(marcaDropdown);

                const response = await fetch(`/Inventario/Formulario?handler=MarcasPorTipo&tipoId=${tipoId}`);
                if (!response.ok) throw new Error('Error en la respuesta');

                const marcas = await response.json();
                populateDropdown(marcaDropdown, marcas, '-- Seleccione una marca --', @Model.Equipo.IdMarca);

                resetDropdown(modeloDropdown, '-- Seleccione una marca primero --');
            } catch (error) {
                console.error('Error cargando marcas:', error);
                resetDropdown(marcaDropdown, '-- Error cargando marcas --');
            }
        }

        async function cargarModelos() {
            const marcaId = document.getElementById('marca').value;
            const tipoId = document.getElementById('tipoEquipo').value;
            const modeloDropdown = document.getElementById('modelo');

            if (!marcaId || !tipoId) {
                resetDropdown(modeloDropdown, '-- Seleccione marca y tipo --');
                return;
            }

            try {
                showLoading(modeloDropdown);

                const response = await fetch(`/Inventario/Formulario?handler=ModelosPorMarcaYTipo&marcaId=${marcaId}&tipoId=${tipoId}`);
                if (!response.ok) throw new Error('Error en la respuesta');

                const modelos = await response.json();
                populateDropdown(modeloDropdown, modelos, '-- Seleccione un modelo --', @Model.Equipo.IdModelo);
            } catch (error) {
                console.error('Error cargando modelos:', error);
                resetDropdown(modeloDropdown, '-- Error cargando modelos --');
            }
        }

        function populateDropdown(dropdown, items, defaultText, selectedValue) {
            let options = `<option value="">${defaultText}</option>`;

            items.forEach(item => {
                const selected = item.id == selectedValue ? 'selected' : '';
                options += `<option value="${item.id}" ${selected}>${item.nombre}</option>`;
            });

            dropdown.innerHTML = options;
            dropdown.disabled = false;
        }

        function resetDropdown(dropdown, message) {
            dropdown.innerHTML = `<option value="">${message}</option>`;
            dropdown.disabled = true;
        }

        function showLoading(dropdown) {
            dropdown.innerHTML = '<option value="">Cargando...</option>';
            dropdown.disabled = true;
        }
    </script>
}
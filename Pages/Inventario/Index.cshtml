@page
@model InventarioComputo.Pages.Inventario.InventarioModel
@{
    ViewData["Title"] = "Inventario Activos Fijos";
    Layout = "_LayoutGeneral";
}
@using InventarioComputo.Security
@inject PermisosService Perms

@{
    var canModActivos = await Perms.TieneAsync(User, PermisosConstantes.ModificarActivos);
    var canModEquipos = await Perms.TieneAsync(User, PermisosConstantes.ModificarEquipos);
    var canModMantenimientos = await Perms.TieneAsync(User, PermisosConstantes.ModificarMantenimientos);
    var hasRoot = await Perms.TieneAsync(User, PermisosConstantes.AccesoTotal);
}

<div class="inventario-container">
    <div class="inventario-header">
        <h1 class="beige-text"><i class="fas fa-laptop"></i> Inventario de Equipos</h1>

        @if (canModActivos)
        {
            <a href="/Inventario/FormMasivo" class="btn btn-beige">
                <i class="fas fa-plus"></i> Agregar Varios Equipos
            </a>

            <a href="/Inventario/Formulario" class="btn btn-beige">
                <i class="fas fa-plus"></i> Nuevo Equipo
            </a>
        }
    </div>

    <form method="get" class="filtros-container beige-bg">
        <div class="filtros-group">
            <div class="filtro-item">
                <label class="form-label beige-text">Tipo de Equipo:</label>
                <select id="filtro-tipoequipo" name="TipoEquipoFilter" class="form-select input-beige">
                    <option value="">Todos</option>
                    @foreach (var item in Model.TiposEquipos)
                    {
                        <option value="@item.id_tipoequipo" selected="@(item.id_tipoequipo.ToString() == Model.TipoEquipoFilter)">
                            @item.NombreTipoEquipo
                        </option>
                    }
                </select>
            </div>

            <div class="filtro-item">
                <label class="form-label beige-text">Marca:</label>
                <select id="filtro-marca" name="MarcaFilter" class="form-select input-beige">
                    <option value="">Todas</option>
                    @foreach (var item in Model.Marcas)
                    {
                        <option value="@item.id_marca" selected="@(item.id_marca.ToString() == Model.MarcaFilter)">
                            @item.NombreMarca
                        </option>
                    }
                </select>
            </div>

            <div class="filtro-item">
                <label class="form-label beige-text">Departamento:</label>
                <select id="filtro-departamentoempresa" name="DepartamentoEmpresaFilter" class="form-select input-beige">
                    <option value="">Todas</option>
                    @foreach (var item in Model.DepartamentosEmpresa)
                    {
                        <option value="@item.id_DE" selected="@(item.id_DE.ToString() == Model.DepartamentoEmpresaFilter)">
                            @item.NombreDepartamento
                        </option>
                    }
                </select>
            </div>

            <div class="filtro-item">
                <label class="form-label beige-text">Estado:</label>
                <select id="filtro-estado" name="EstadoFilter" class="form-select input-beige">
                    <option value="">Todos</option>
                    @foreach (var item in Model.Estados)
                    {
                        <option value="@item.id_estado" selected="@(item.id_estado.ToString() == Model.EstadoFilter)">
                            @item.EstadoActual
                        </option>
                    }
                </select>
            </div>

            <!-- Filtros de fecha de compra -->
            <div class="filtro-item">
                <label class="form-label beige-text">Comprado desde:</label>
                <input type="date"
                       id="filtro-fechadesde"
                       name="FechaDesdeFilter"
                       class="form-control input-beige"
                       value="@(Model.FechaDesdeFilter?.ToString("yyyy-MM-dd"))" />
            </div>

            <div class="filtro-item">
                <label class="form-label beige-text">Comprado hasta:</label>
                <input type="date"
                       id="filtro-fechahasta"
                       name="FechaHastaFilter"
                       class="form-control input-beige"
                       value="@(Model.FechaHastaFilter?.ToString("yyyy-MM-dd"))" />
            </div>
            <!-- Fin filtros de fecha -->

            <div class="filtro-item">
                <label class="form-label beige-text">Vida útil:</label>
                <select id="filtro-vidautil" name="VidaUtilFilter" class="form-select input-beige">
                    <option value="" selected="@(string.IsNullOrEmpty(Model.VidaUtilFilter))">Todas</option>
                    <option value="sin-dato" selected="@(Model.VidaUtilFilter == "sin-dato")">Sin dato</option>
                    <option value="vencida" selected="@(Model.VidaUtilFilter == "vencida")">Vencida (≤ 0 años)</option>
                    <option value="0-1" selected="@(Model.VidaUtilFilter == "0-1")">0 a 1 año</option>
                    <option value="1-3" selected="@(Model.VidaUtilFilter == "1-3")">1 a 3 años</option>
                    <option value="3plus" selected="@(Model.VidaUtilFilter == "3plus")">Más de 3 años</option>
                </select>
            </div>

            <div class="filtro-item">
                <label class="form-label beige-text">Buscar:</label>
                <input type="text" id="filtro-busqueda" name="BusquedaFilter" class="form-control input-beige"
                       placeholder="N° Serie, Etiqueta..." value="@Model.BusquedaFilter">
            </div>
        </div>

        <!-- Conserva orden actual y reinicia a página 1 al aplicar -->
        <input type="hidden" name="sortColumn" value="@Model.SortColumn" />
        <input type="hidden" name="sortDirection" value="@Model.SortDirection" />
        <input type="hidden" name="pagina" value="1" />

        <div class="d-flex justify-content-end mt-2">
            <a href="/Inventario/Index" class="btn btn-cancelar me-2">Limpiar</a>
            <button type="submit" class="btn btn-beige-sm"><i class="fas fa-filter"></i> Aplicar Filtros</button>
        </div>
    </form>

    <div class="table-responsive">
        <table class="table table-hover table-beige sortable-table">
            <thead>
                <tr>
                    <th data-sort-column="EtiquetaInv">
                        <a href="#" class="sort-link">
                            Etiqueta
                            @if (Model.SortColumn == "EtiquetaInv")
                            {
                                <i class="fas fa-sort-@(Model.SortDirection == "ASC" ? "up" : "down")"></i>
                            }
                            else
                            {
                                <i class="fas fa-sort"></i>
                            }
                        </a>
                    </th>
                    <th data-sort-column="NumeroSerie">
                        <a href="#" class="sort-link">
                            N° Serie
                            @if (Model.SortColumn == "NumeroSerie")
                            {
                                <i class="fas fa-sort-@(Model.SortDirection == "ASC" ? "up" : "down")"></i>
                            }
                            else
                            {
                                <i class="fas fa-sort"></i>
                            }
                        </a>
                    </th>
                    <th data-sort-column="TipoEquipo">
                        <a href="#" class="sort-link">
                            Tipo
                            @if (Model.SortColumn == "TipoEquipo")
                            {
                                <i class="fas fa-sort-@(Model.SortDirection == "ASC" ? "up" : "down")"></i>
                            }
                            else
                            {
                                <i class="fas fa-sort"></i>
                            }
                        </a>
                    </th>
                    <th data-sort-column="Marca">
                        <a href="#" class="sort-link">
                            Marca/Modelo
                            @if (Model.SortColumn == "Marca")
                            {
                                <i class="fas fa-sort-@(Model.SortDirection == "ASC" ? "up" : "down")"></i>
                            }
                            else
                            {
                                <i class="fas fa-sort"></i>
                            }
                        </a>
                    </th>
                    <th data-sort-column="DepartamentoEmpresa">
                        <a href="#" class="sort-link">
                            Departamento
                            @if (Model.SortColumn == "DepartamentoEmpresa")
                            {
                                <i class="fas fa-sort-@(Model.SortDirection == "ASC" ? "up" : "down")"></i>
                            }
                            else
                            {
                                <i class="fas fa-sort"></i>
                            }
                        </a>
                    </th>
                    <th data-sort-column="Estado">
                        <a href="#" class="sort-link">
                            Estado
                            @if (Model.SortColumn == "Estado")
                            {
                                <i class="fas fa-sort-@(Model.SortDirection == "ASC" ? "up" : "down")"></i>
                            }
                            else
                            {
                                <i class="fas fa-sort"></i>
                            }
                        </a>
                    </th>
                    <th data-sort-column="AsignadoA">
                        <a href="#" class="sort-link">
                            Asignado a
                            @if (Model.SortColumn == "AsignadoA")
                            {
                                <i class="fas fa-sort-@(Model.SortDirection == "ASC" ? "up" : "down")"></i>
                            }
                            else
                            {
                                <i class="fas fa-sort"></i>
                            }
                        </a>
                    </th>
                    <th data-sort-column="VidaUtil">
                        <a href="#" class="sort-link">
                            Vida útil (años)
                            @if (Model.SortColumn == "VidaUtil")
                            {
                                <i class="fas fa-sort-@(Model.SortDirection == "ASC" ? "up" : "down")"></i>
                            }
                            else
                            {
                                <i class="fas fa-sort"></i>
                            }
                        </a>
                    </th>
                    <th>Acciones</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var equipo in Model.Equipos)
                {
                    <tr>
                        <td>@equipo.EtiquetaInv</td>
                        <td>@equipo.NumeroSerie</td>
                        <td>@equipo.TipoEquipo</td>
                        <td>@equipo.Marca - @equipo.Modelo</td>
                        <td>@equipo.DepartamentoEmpresa</td>
                        <td><span class="badge estado-@equipo.Estado.ToLower()">@equipo.Estado</span></td>
                        <td>@(equipo.AsignadoA ?? "No asignado")</td>
                        <td>
                            @{
                                if (equipo.VidaUtilAnios == null)
                                {
                                    @:Sin dato
                                }
                                else if (equipo.VidaUtilAnios <= 0)
                                {
                                    <span class="badge bg-danger">Vencida</span>
                                }
                                else
                                {
                                    @($"{equipo.VidaUtilAnios} años")
                                }
                            }
                        </td>
                        <td class="acciones">
                            @if (canModActivos)
                            {
                                <a href="/Inventario/Formulario/Editar/@equipo.id_activofijo" class="btn btn-action" title="Editar"><i class="fas fa-pen"></i></a>
                            }
                            else
                            {
                                <a href="/Inventario/Formulario/Ver/@equipo.id_activofijo" class="btn btn-action" title="Ver"><i class="fas fa-eye"></i></a>
                            }

                            @if (canModEquipos)
                            {
                                <button class="btn btn-action btn-asignar" data-id="@equipo.id_activofijo" title="Asignar Activo"><i class="fas fa-user-check"></i></button>
                            }
                            @if (canModMantenimientos)
                            {
                                <button class="btn btn-action btn-mantenimiento" data-id="@equipo.id_activofijo" title="Registrar mantenimiento"><i class="fas fa-tools"></i></button>
                            }
                            @if (hasRoot)
                            {
                                <button class="btn btn-action btn-eliminar" data-id="@equipo.id_activofijo" title="Eliminar"><i class="fas fa-trash-alt"></i></button>
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <div class="paginacion">
        <nav aria-label="Page navigation">
            <ul class="pagination">
                @for (int i = 1; i <= Model.TotalPaginas; i++)
                {
                    var url = $"/Inventario?pagina={i}" +
                    $"&sortColumn={Model.SortColumn}" +
                    $"&sortDirection={Model.SortDirection}" +
                    $"&TipoEquipoFilter={Model.TipoEquipoFilter}" +
                    $"&MarcaFilter={Model.MarcaFilter}" +
                    $"&DepartamentoEmpresaFilter={Model.DepartamentoEmpresaFilter}" +
                    $"&EstadoFilter={Model.EstadoFilter}" +
                    $"&VidaUtilFilter={Model.VidaUtilFilter}" +
                    $"&BusquedaFilter={Model.BusquedaFilter}" +
                    $"&FechaDesdeFilter={(Model.FechaDesdeFilter.HasValue ? Model.FechaDesdeFilter.Value.ToString("yyyy-MM-dd") : "")}" +
                    $"&FechaHastaFilter={(Model.FechaHastaFilter.HasValue ? Model.FechaHastaFilter.Value.ToString("yyyy-MM-dd") : "")}";
                    <li class="page-item @(i == Model.PaginaActual ? "active" : "")">
                        <a class="page-link" href="@url">@i</a>
                    </li>
                }
            </ul>
        </nav>
    </div>
</div>

<div class="modal fade" id="confirmarEliminarModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header beige-bg">
                <h5 class="modal-title beige-text">Confirmar Eliminación</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                ¿Está seguro que desea eliminar este activo fijo? Esta acción no se puede deshacer.
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                <form method="post" asp-page-handler="Delete" id="formEliminar">
                    <input type="hidden" name="id" id="idActivoFijoAEliminar" />
                    <button type="submit" class="btn btn-danger">Eliminar</button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Styles {
    <link rel="stylesheet" href="~/Styles/Style_Inventario.css" asp-append-version="true" />
    <style>
        .sort-link {
            color: inherit;
            text-decoration: none;
            display: flex;
            align-items: center;
            gap: 5px;
        }

            .sort-link:hover {
                color: #6c757d;
            }

        .fa-sort, .fa-sort-up, .fa-sort-down {
            font-size: .8em;
        }
    </style>
}

@section Scripts {
    <script src="~/js/Script_Tablas.js" asp-append-version="true"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Navegación acciones
            document.querySelectorAll('.btn-mantenimiento').forEach(btn => {
                btn.addEventListener('click', function () {
                    const idEquipo = this.getAttribute('data-id');
                    window.location.href = `/Mantenimientos/PruebaFormulario?idEquipo=${idEquipo}`;
                });
            });
            document.querySelectorAll('.btn-asignar').forEach(btn => {
                btn.addEventListener('click', function () {
                    const idEquipo = this.getAttribute('data-id');
                    window.location.href = `/Asignaciones/Asignar?idEquipo=${idEquipo}`;
                });
            });

            // Modal eliminar
            let idActivoFijo = null;
            document.querySelectorAll('.btn-eliminar').forEach(btn => {
                btn.addEventListener('click', function () {
                    idActivoFijo = this.getAttribute('data-id');
                    const modal = new bootstrap.Modal(document.getElementById('confirmarEliminarModal'));
                    modal.show();
                });
            });
            document.getElementById('formEliminar').addEventListener('submit', function (e) {
                if (idActivoFijo) {
                    this.querySelector('#idActivoFijoAEliminar').value = idActivoFijo;
                } else {
                    e.preventDefault();
                    alert('Error: No se ha seleccionado un activo fijo para eliminar.');
                }
            });

            // Ordenar: ahora usa el FORM GET (ajusta hidden inputs y envía)
            const filtrosForm = document.querySelector('form.filtros-container');
            document.querySelectorAll('.sort-link').forEach(link => {
                link.addEventListener('click', function (e) {
                    e.preventDefault();
                    const column = this.closest('th').dataset.sortColumn;

                    const sortColInput = filtrosForm.querySelector('input[name="sortColumn"]');
                    const sortDirInput = filtrosForm.querySelector('input[name="sortDirection"]');
                    const paginaInput = filtrosForm.querySelector('input[name="pagina"]');

                    const currentCol = sortColInput.value || 'EtiquetaInv';
                    const currentDir = (sortDirInput.value || 'ASC').toUpperCase();
                    const newDir = (currentCol === column && currentDir === 'ASC') ? 'DESC' : 'ASC';

                    sortColInput.value = column;
                    sortDirInput.value = newDir;
                    paginaInput.value = '1';

                    filtrosForm.submit();
                });
            });

        });
    </script>
}

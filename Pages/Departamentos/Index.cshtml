@page
@model InventarioComputo.Pages.Departamentos.DepartamentosModel
@{
    ViewData["Title"] = "Gestión de Departamentos";
    Layout = "_LayoutGeneral";
}

@using InventarioComputo.Security
@inject PermisosService Perms

@{
    var canModDepartamentos = await Perms.TieneAsync(User, PermisosConstantes.ModificarDepartamentos);
    var hasRoot = await Perms.TieneAsync(User, PermisosConstantes.AccesoTotal);
}

<div class="inventario-container">
    <div class="inventario-header">
        <h1 class="beige-text"><i class="fas fa-building"></i> @ViewData["Title"]</h1>
        @if (canModDepartamentos)
        {
            <a href="/Departamentos/DepaForm" class="btn btn-beige">
                <i class="fas fa-plus"></i> Nuevo Departamento
            </a>
        }
    </div>

    @if (TempData["Mensaje"] != null)
    {
        <div class="alert alert-success">@TempData["Mensaje"]</div>
    }
    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger">@TempData["Error"]</div>
    }

    <form id="form-filtros" method="get" class="filtros-container beige-bg">
        <div class="filtros-group">
            <div class="filtro-item">
                <label class="form-label beige-text">Buscar:</label>
                <input type="text"
                       id="filtro-busqueda"
                       name="BusquedaFilter"
                       class="form-control input-beige"
                       placeholder="Nombre, descripción..."
                       value="@Model.BusquedaFilter" />

            </div>
        </div>

        <input type="hidden" name="sortColumn" value="@Model.SortColumn" />
        <input type="hidden" name="sortDirection" value="@Model.SortDirection" />
        <input type="hidden" name="pagina" value="1" />

        <div class="d-flex justify-content-end mt-2">
            <a href="/Departamentos/Index" class="btn btn-cancelar me-2">Limpiar</a>
            <button type="submit" class="btn btn-beige-sm"><i class="fas fa-filter"></i> Aplicar Filtros</button>
        </div>
    </form>

    <div class="table-responsive">
        <table class="table table-hover table-beige sortable-table">
            <thead>
                <tr>
                    <th data-sort-column="NombreDepartamento">
                        <a href="#" class="sort-link">
                            Departamento
                            @if (Model.SortColumn == "NombreDepartamento")
                            {
                                <i class="fas fa-sort-@(Model.SortDirection == "ASC" ? "up" : "down")"></i>
                            }
                            else
                            {
                                <i class="fas fa-sort"></i>
                            }
                        </a>
                    </th>
                    <th data-sort-column="Descripcion">
                        <a href="#" class="sort-link">
                            Descripción
                            @if (Model.SortColumn == "Descripcion")
                            {
                                <i class="fas fa-sort-@(Model.SortDirection == "ASC" ? "up" : "down")"></i>
                            }
                            else
                            {
                                <i class="fas fa-sort"></i>
                            }
                        </a>
                    </th>
                    <th>Áreas Asociadas</th>
                    <th>Acciones</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var departamento in Model.Departamentos)
                {
                    <tr>
                        <td>@departamento.Nombre</td>
                        <td>@departamento.Descripcion</td>
                        <td>
                            @if (departamento.AreasAsociadas.Any())
                            {
                                <div class="d-flex flex-wrap gap-1">
                                    @foreach (var area in departamento.AreasAsociadas)
                                    {
                                        <span class="badge bg-beige">@area</span>
                                    }
                                </div>
                            }
                            else
                            {
                                <span>Sin áreas asociadas</span>
                            }
                        </td>
                        <td class="acciones">
                            @if (canModDepartamentos)
                            {
                                <a href="/Departamentos/DepaForm/Editar/@departamento.Id" class="btn btn-action" title="Editar">
                                    <i class="fas fa-edit"></i>
                                </a>
                            }
                            else
                            {
                                <a href="/Departamentos/DepaForm/Ver/@departamento.Id" class="btn btn-action" title="Ver">
                                    <i class="fas fa-eye"></i>
                                </a>
                            }

                            @if (hasRoot){
                                <button class="btn btn-action btn-eliminar"
                                        data-id="@departamento.Id"
                                        data-nombre="@departamento.Nombre"
                                        title="Eliminar">
                                    <i class="fas fa-trash-alt"></i>
                                </button>
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <div class="paginacion">
        <nav aria-label="Page navigation">
            <ul class="pagination">
                @for (int i = 1; i <= Model.TotalPaginas; i++)
                {
                    var url = $"/Departamentos?pagina={i}" +
                              $"&sortColumn={Model.SortColumn}" +
                              $"&sortDirection={Model.SortDirection}" +
                              $"&BusquedaFilter={Model.BusquedaFilter}";
                    <li class="page-item @(i == Model.PaginaActual ? "active" : "")">
                        <a class="page-link" href="@url">@i</a>
                    </li>
                }
            </ul>
        </nav>
    </div>
</div>

<div class="modal fade" id="confirmarEliminarModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header beige-bg">
                <h5 class="modal-title beige-text">Confirmar Eliminación</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                ¿Está seguro que desea eliminar el departamento <strong id="nombreDepartamentoEliminar"></strong>?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                <form method="post" asp-page-handler="Delete" id="formEliminar">
                    <input type="hidden" name="id" id="idDepartamentoAEliminar" />
                    <button type="submit" class="btn btn-danger">Eliminar</button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Styles {
    <link rel="stylesheet" href="~/Styles/Style_Inventario.css" asp-append-version="true" />
    <style>
        .badge.bg-beige {
            background-color: #f5f5dc;
            color: #333;
            font-weight: normal;
            padding: 0.4em 0.65em;
            border-radius: 4px;
            border: 1px solid #ddd;
            white-space: nowrap;
        }
        .d-flex { display: flex; }
        .flex-wrap { flex-wrap: wrap; }
        .gap-1 { gap: 0.25rem; }
    </style>
}

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Ordenamiento con FORM GET
            const filtrosForm = document.getElementById('form-filtros');

            document.querySelectorAll('.sort-link').forEach(link => {
                link.addEventListener('click', function (e) {
                    e.preventDefault();

                    const th = this.closest('th');
                    const column = th ? th.getAttribute('data-sort-column') : null;

                    if (filtrosForm && column) {
                        const sortColInput = filtrosForm.querySelector('input[name="sortColumn"]');
                        const sortDirInput = filtrosForm.querySelector('input[name="sortDirection"]');
                        const paginaInput  = filtrosForm.querySelector('input[name="pagina"]');

                        const currentCol = (sortColInput?.value || 'NombreDepartamento');
                        const currentDir = ((sortDirInput?.value || 'ASC') + '').toUpperCase();
                        const newDir     = (currentCol === column && currentDir === 'ASC') ? 'DESC' : 'ASC';

                        if (sortColInput) sortColInput.value = column;
                        if (sortDirInput) sortDirInput.value = newDir;
                        if (paginaInput)  paginaInput.value  = '1';

                        filtrosForm.submit();
                    } else {
                        // Fallback: construir URL como antes
                        const url = new URL(window.location.href);
                        const currentOrder = (url.searchParams.get('sortDirection') || 'ASC').toUpperCase();
                        const currentColumn = url.searchParams.get('sortColumn') || '';
                        const newOrder = (currentColumn === column && currentOrder === 'ASC') ? 'DESC' : 'ASC';

                        url.searchParams.set('sortColumn', column || 'NombreDepartamento');
                        url.searchParams.set('sortDirection', newOrder);
                        url.searchParams.set('pagina', '1');
                        window.location.href = url.toString();
                    }
                });
            });

            // Eliminar (modal)
            let idDepartamentoAEliminar = null;
            document.querySelectorAll('.btn-eliminar').forEach(btn => {
                btn.addEventListener('click', function () {
                    idDepartamentoAEliminar = this.getAttribute('data-id');
                    const nombre = this.getAttribute('data-nombre');
                    document.getElementById('nombreDepartamentoEliminar').textContent = nombre;
                    const modal = new bootstrap.Modal(document.getElementById('confirmarEliminarModal'));
                    modal.show();
                });
            });

            document.getElementById('formEliminar').addEventListener('submit', function (e) {
                if (idDepartamentoAEliminar) {
                    this.querySelector('#idDepartamentoAEliminar').value = idDepartamentoAEliminar;
                } else {
                    e.preventDefault();
                    alert('Error: No se ha seleccionado un departamento para eliminar.');
                }
            });
        });
    </script>
}

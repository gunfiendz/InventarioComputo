@page "/EquiposRegistrados/EquiposForm/{handler?}/{id:int?}"
@model InventarioComputo.Pages.EquiposRegistrados.EquiposFormModel
@{
    ViewData["Title"] = Model.Modo == "Crear" ? "Nuevo Perfil" :
                        Model.Modo == "Editar" ? "Editar Perfil" : "Ver Perfil";
    Layout = "_LayoutGeneral";
    bool esModoLectura = Model.Modo == "Ver";
}

<div class="container-form">
    <h1 class="beige-text"><i class="fas fa-list-alt"></i> @ViewData["Title"]</h1>

    <form method="post" class="form-beige" asp-antiforgery="true">
        <input type="hidden" asp-for="Id" />

        <div class="form-group">
            <label asp-for="NombrePerfil" class="form-label">Nombre del Perfil</label>
            <input asp-for="NombrePerfil" class="form-control" readonly="@esModoLectura" />
            <span asp-validation-for="NombrePerfil" class="text-danger"></span>
        </div>

        <div class="row">
            <div class="col-md-4">
                <div class="form-group">
                    <label asp-for="IdMarca" class="form-label">Marca</label>
                    <div class="input-group">
                        <select asp-for="IdMarca" id="selectMarca" class="form-control input-beige" disabled="@esModoLectura" asp-items="Model.Marcas">
                            <option value="">-- Seleccione marca --</option>
                        </select>
                        @if (!esModoLectura)
                        {
                            <button type="button" class="btn btn-outline-beige btn-add-item" data-bs-toggle="modal" data-bs-target="#addItemModal" data-type="marca" title="Agregar Nueva Marca">
                                <i class="fas fa-plus"></i>
                            </button>
                        }
                    </div>
                    <span asp-validation-for="IdMarca" class="text-danger"></span>
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    <label asp-for="IdTipoEquipo" class="form-label">Tipo de Equipo</label>
                    <div class="input-group">
                        <select asp-for="IdTipoEquipo" id="selectTipo" class="form-control input-beige" disabled="@esModoLectura" asp-items="Model.TiposEquipos">
                            <option value="">-- Seleccione tipo --</option>
                        </select>
                        @if (!esModoLectura)
                        {
                            <button type="button" class="btn btn-outline-beige btn-add-item" data-bs-toggle="modal" data-bs-target="#addItemModal" data-type="tipo" title="Agregar Nuevo Tipo">
                                <i class="fas fa-plus"></i>
                            </button>
                        }
                    </div>
                    <span asp-validation-for="IdTipoEquipo" class="text-danger"></span>
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    <label asp-for="IdModelo" class="form-label">Modelo</label>
                    <div class="input-group">
                        <select asp-for="IdModelo" id="selectModelo" class="form-control input-beige" disabled="@esModoLectura">
                            <option value="">-- Seleccione marca y tipo --</option>
                        </select>
                        @if (!esModoLectura)
                        {
                            <button type="button" class="btn btn-outline-beige btn-add-item" data-bs-toggle="modal" data-bs-target="#addItemModal" data-type="modelo" title="Agregar Nuevo Modelo">
                                <i class="fas fa-plus"></i>
                            </button>
                        }
                    </div>
                    <span asp-validation-for="IdModelo" class="text-danger"></span>
                </div>
            </div>
        </div>

        <div class="form-group">
            <label class="form-label">Características Técnicas</label>
            <div id="caracteristicas-container">
                @for (int i = 0; i < Model.CaracteristicasSeleccionadas.Count; i++)
                {
                    <div class="caracteristica-item row mb-2">
                        <div class="col-md-5">
                            <select asp-for="CaracteristicasSeleccionadas[i].IdCaracteristica" class="form-control caracteristica-select" data-index="@i" disabled="@esModoLectura">
                                <option value="">-- Seleccione --</option>
                                @foreach (var car in Model.TodasCaracteristicas)
                                {
                                    <option value="@car.Id" selected="@(car.Id == Model.CaracteristicasSeleccionadas[i]?.IdCaracteristica)" data-caracteristica-id="@car.Id">
                                        @car.Nombre
                                    </option>
                                }
                            </select>
                        </div>
                        <div class="col-md-5">
                            <input asp-for="CaracteristicasSeleccionadas[i].Valor" class="form-control" placeholder="Valor" readonly="@esModoLectura" />
                        </div>
                        @if (!esModoLectura)
                        {
                            <div class="col-md-2">
                                <button type="button" class="btn btn-danger btn-eliminar-caracteristica"><i class="fas fa-trash"></i></button>
                            </div>
                        }
                    </div>
                }
            </div>
            @if (!esModoLectura)
            {
                <button type="button" id="btn-agregar-caracteristica" class="btn btn-beige-sm mt-2">
                    <i class="fas fa-plus"></i> Agregar Característica
                </button>
            }
        </div>

        <div class="form-actions">
            @if (!esModoLectura)
            {
                <button type="submit" class="btn btn-beige">Guardar</button>
                <a asp-page="Index" class="btn btn-cancelar">Cancelar</a>
            }
            else
            {
                <a asp-page="EquiposForm" asp-route-handler="Editar" asp-route-id="@Model.Id" class="btn btn-beige">Editar</a>
                <a asp-page="Index" class="btn btn-cancelar">Volver</a>
            }
        </div>
    </form>
</div>

<div class="modal fade" id="addItemModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addItemModalLabel"></h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <div id="modal-alert" class="alert alert-danger d-none"></div>

                <div id="modal-tipo-fields" class="modal-fields d-none">
                    <label for="newTipoNombre" class="form-label">Nombre del Nuevo Tipo de Equipo</label>
                    <input type="text" id="newTipoNombre" class="form-control" />
                </div>
                <div id="modal-marca-fields" class="modal-fields d-none">
                    <label for="newMarcaNombre" class="form-label">Nombre de la Nueva Marca</label>
                    <input type="text" id="newMarcaNombre" class="form-control" />
                </div>
                <div id="modal-modelo-fields" class="modal-fields d-none">
                    <div class="form-group mb-2"><label for="newModeloNombre" class="form-label">Nombre del Nuevo Modelo</label><input type="text" id="newModeloNombre" class="form-control" /></div>
                    <div class="form-group mb-2"><label for="modalModeloTipo" class="form-label">Tipo de Equipo</label><select id="modalModeloTipo" class="form-control" disabled></select></div>
                    <div class="form-group"><label for="modalModeloMarca" class="form-label">Marca</label><select id="modalModeloMarca" class="form-control" disabled></select></div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-beige" id="btn-modal-save">Guardar</button>
                <button type="button" class="btn btn-cancelar" data-bs-dismiss="modal">Cancelar</button>
                
            </div>
        </div>
    </div>
</div>

<template id="caracteristica-template">
    <div class="caracteristica-item row mb-2">
        <div class="col-md-5">
            <select class="form-control caracteristica-select" name="CaracteristicasSeleccionadas[0].IdCaracteristica">
                <option value="">-- Seleccione --</option>
                @foreach (var car in Model.TodasCaracteristicas)
                {
                    <option value="@car.Id" data-caracteristica-id="@car.Id">@car.Nombre</option>
                }
            </select>
        </div>
        <div class="col-md-5">
            <input class="form-control" name="CaracteristicasSeleccionadas[0].Valor" placeholder="Valor" />
        </div>
        <div class="col-md-2">
            <button type="button" class="btn btn-danger btn-eliminar-caracteristica"><i class="fas fa-trash"></i></button>
        </div>
    </div>
</template>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Lógica para las características dinámicas (agregar/eliminar filas)
            const caracteristicasSeleccionadas = new Set();
            function actualizarCaracteristicasSeleccionadas() {
                caracteristicasSeleccionadas.clear();
                document.querySelectorAll('.caracteristica-select').forEach(select => {
                    if (select.value) { caracteristicasSeleccionadas.add(parseInt(select.value)); }
                });
                document.querySelectorAll('.caracteristica-select').forEach(select => {
                    const currentValue = select.value;
                    Array.from(select.options).forEach(option => {
                        if (option.value === "") return;
                        const carId = parseInt(option.value);
                        option.hidden = caracteristicasSeleccionadas.has(carId) && option.value !== currentValue;
                    });
                });
            }
            function reindexarCaracteristicas() {
                const items = document.querySelectorAll('#caracteristicas-container .caracteristica-item');
                items.forEach((item, index) => {
                    item.querySelectorAll('[name]').forEach(input => {
                        input.name = input.name.replace(/\[\d+\]/, `[${index}]`);
                    });
                });
            }
            document.getElementById('btn-agregar-caracteristica')?.addEventListener('click', function () {
                const container = document.getElementById('caracteristicas-container');
                const template = document.getElementById('caracteristica-template');
                const clone = template.content.cloneNode(true);
                container.appendChild(clone);
                reindexarCaracteristicas();
                actualizarCaracteristicasSeleccionadas();
            });
            document.addEventListener('click', function (e) {
                const eliminarBtn = e.target.closest('.btn-eliminar-caracteristica');
                if (eliminarBtn) {
                    eliminarBtn.closest('.caracteristica-item').remove();
                    reindexarCaracteristicas();
                    actualizarCaracteristicasSeleccionadas();
                }
            });
            document.querySelectorAll('.caracteristica-select').forEach(select => {
                select.addEventListener('change', actualizarCaracteristicasSeleccionadas);
            });
            actualizarCaracteristicasSeleccionadas();

            // Lógica para modal y dropdowns dependientes
            const marcaSelect = document.getElementById('selectMarca');
            const tipoSelect = document.getElementById('selectTipo');
            const modeloSelect = document.getElementById('selectModelo');
            const addItemModal = document.getElementById('addItemModal');
            let currentItemType = '';

            async function cargarModelos() {
                if (!marcaSelect.value || !tipoSelect.value) {
                    modeloSelect.innerHTML = '<option value="">-- Seleccione marca y tipo --</option>'; return;
                }
                try {
                    modeloSelect.innerHTML = '<option value="">Cargando...</option>';
                    const response = await fetch(`/EquiposRegistrados/EquiposForm?handler=ModelosPorMarcaYTipo&marcaId=${marcaSelect.value}&tipoId=${tipoSelect.value}`);
                    const modelos = await response.json();
                    let options = '<option value="">-- Seleccione modelo --</option>';
                    modelos.forEach(m => { options += `<option value="${m.value}" ${m.value == '@Model.IdModelo' ? 'selected' : ''}>${m.text}</option>`; });
                    modeloSelect.innerHTML = options;
                } catch (e) { modeloSelect.innerHTML = '<option value="">-- Error --</option>'; }
            }

            marcaSelect.addEventListener('change', cargarModelos);
            tipoSelect.addEventListener('change', cargarModelos);
            if ('@Model.IdMarca' && '@Model.IdTipoEquipo') { cargarModelos(); }

            addItemModal.addEventListener('show.bs.modal', function (event) {
                const button = event.relatedTarget;
                currentItemType = button.getAttribute('data-type');
                const modalTitle = document.getElementById('addItemModalLabel');

                document.querySelectorAll('.modal-fields').forEach(el => el.classList.add('d-none'));

                if (currentItemType === 'tipo') {
                    modalTitle.textContent = 'Agregar Nuevo Tipo de Equipo';
                    document.getElementById('modal-tipo-fields').classList.remove('d-none');
                } else if (currentItemType === 'marca') {
                    modalTitle.textContent = 'Agregar Nueva Marca';
                    document.getElementById('modal-marca-fields').classList.remove('d-none');
                } else if (currentItemType === 'modelo') {
                    modalTitle.textContent = 'Agregar Nuevo Modelo';
                    document.getElementById('modal-modelo-fields').classList.remove('d-none');
                    document.getElementById('modalModeloTipo').innerHTML = `<option value="${tipoSelect.value}">${tipoSelect.options[tipoSelect.selectedIndex].text}</option>`;
                    document.getElementById('modalModeloMarca').innerHTML = `<option value="${marcaSelect.value}">${marcaSelect.options[marcaSelect.selectedIndex].text}</option>`;
                }
            });

            document.getElementById('btn-modal-save').addEventListener('click', async function () {
                let url, body, targetSelect;
                const token = document.querySelector('input[name="__RequestVerificationToken"]').value;

                switch (currentItemType) {
                    case 'tipo':
                        url = '/EquiposRegistrados/EquiposForm?handler=AddTipo';
                        body = { Nombre: document.getElementById('newTipoNombre').value };
                        targetSelect = tipoSelect;
                        break;
                    case 'marca':
                        url = '/EquiposRegistrados/EquiposForm?handler=AddMarca';
                        body = { Nombre: document.getElementById('newMarcaNombre').value };
                        targetSelect = marcaSelect;
                        break;
                    case 'modelo':
                        url = '/EquiposRegistrados/EquiposForm?handler=AgregarModelo';
                        body = { NombreModelo: document.getElementById('newModeloNombre').value, MarcaId: marcaSelect.value, TipoId: tipoSelect.value };
                        targetSelect = modeloSelect;
                        break;
                }

                try {
                    const response = await fetch(url, {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json', 'RequestVerificationToken': token },
                        body: JSON.stringify(body)
                    });
                    const result = await response.json();

                    if (result.success) {
                        const newOption = new Option(result.text || result.nombre, result.id, true, true);
                        targetSelect.add(newOption);
                        targetSelect.dispatchEvent(new Event('change'));
                        bootstrap.Modal.getInstance(addItemModal).hide();
                    } else {
                        document.getElementById('modal-alert').textContent = result.message || 'Error al guardar.';
                        document.getElementById('modal-alert').classList.remove('d-none');
                    }
                } catch (e) {
                    document.getElementById('modal-alert').textContent = 'Error de conexión.';
                    document.getElementById('modal-alert').classList.remove('d-none');
                }
            });

            addItemModal.addEventListener('hidden.bs.modal', function () {
                document.querySelectorAll('.modal-fields input').forEach(input => input.value = '');
                document.getElementById('modal-alert').classList.add('d-none');
            });
        });
    </script>
}
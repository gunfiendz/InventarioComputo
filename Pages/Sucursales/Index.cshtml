@page
@model SucursalesModel
@{
    ViewData["Title"] = "Gestión de Sucursales";
    Layout = "_LayoutGeneral";
}

<div class="inventario-container">
    <div class="inventario-header">
        <h1 class="beige-text"><i class="fas fa-store"></i> @ViewData["Title"]</h1>
        <a asp-page="NuevaSucursal" class="btn btn-beige">
            <i class="fas fa-plus"></i> Nueva Sucursal
        </a>
    </div>

    <!-- Filtros con estructura idéntica a Inventario -->
    <div class="filtros-container beige-bg">
        <div class="filtros-group">
            <div class="filtro-item">
                <label class="form-label beige-text">Departamento:</label>
                <select id="filtro-departamento" class="form-select input-beige">
                    <option value="">Todos</option>
                    @foreach (var departamento in Model.Departamentos)
                    {
                        <option value="@departamento.Id"
                                selected="@(departamento.Id.ToString() == Model.DepartamentoFilter)">
                            @departamento.Nombre
                        </option>
                    }
                </select>
            </div>

            <div class="filtro-item">
                <label class="form-label beige-text">Ciudad:</label>
                <select id="filtro-ciudad" class="form-select input-beige"
                        disabled="@(string.IsNullOrEmpty(Model.DepartamentoFilter))">
                    <option value="">Todas</option>
                    @foreach (var ciudad in Model.Ciudades)
                    {
                        <option value="@ciudad.Id"
                                selected="@(ciudad.Id.ToString() == Model.CiudadFilter)">
                            @ciudad.Nombre
                        </option>
                    }
                </select>
            </div>

            <div class="filtro-item">
                <label class="form-label beige-text">Buscar:</label>
                <input type="text" id="filtro-busqueda" class="form-control input-beige"
                       placeholder="Nombre, dirección..."
                       value="@Model.BusquedaFilter">
            </div>
        </div>
        <button id="btn-aplicar-filtros" class="btn btn-beige-sm">
            <i class="fas fa-filter"></i> Aplicar Filtros
        </button>
    </div>

    <!-- Tabla con clases idénticas a Inventario -->
    <div class="table-responsive">
        <table class="table table-hover table-beige sortable-table">
            <thead>
                <tr>
                    <th data-sort-column="Nombre">
                        <a href="#" class="sort-link">
                            Nombre
                            @if (Model.SortColumn == "Nombre")
                            {
                                <i class="fas fa-sort-@(Model.SortDirection == "ASC" ? "up" : "down")"></i>
                            }
                            else
                            {
                                <i class="fas fa-sort"></i>
                            }
                        </a>
                    </th>
                    <th data-sort-column="Direccion">
                        <a href="#" class="sort-link">
                            Dirección
                            @if (Model.SortColumn == "Direccion")
                            {
                                <i class="fas fa-sort-@(Model.SortDirection == "ASC" ? "up" : "down")"></i>
                            }
                            else
                            {
                                <i class="fas fa-sort"></i>
                            }
                        </a>
                    </th>
                    <th data-sort-column="Ciudad">
                        <a href="#" class="sort-link">
                            Ciudad
                            @if (Model.SortColumn == "Ciudad")
                            {
                                <i class="fas fa-sort-@(Model.SortDirection == "ASC" ? "up" : "down")"></i>
                            }
                            else
                            {
                                <i class="fas fa-sort"></i>
                            }
                        </a>
                    </th>
                    <th data-sort-column="Departamento">
                        <a href="#" class="sort-link">
                            Departamento
                            @if (Model.SortColumn == "Departamento")
                            {
                                <i class="fas fa-sort-@(Model.SortDirection == "ASC" ? "up" : "down")"></i>
                            }
                            else
                            {
                                <i class="fas fa-sort"></i>
                            }
                        </a>
                    </th>
                    <th data-sort-column="Telefono">
                        <a href="#" class="sort-link">
                            Teléfono
                            @if (Model.SortColumn == "Telefono")
                            {
                                <i class="fas fa-sort-@(Model.SortDirection == "ASC" ? "up" : "down")"></i>
                            }
                            else
                            {
                                <i class="fas fa-sort"></i>
                            }
                        </a>
                    </th>
                    <th>Acciones</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var sucursal in Model.Sucursales)
                {
                    <tr>
                        <td>@sucursal.Nombre</td>
                        <td>@sucursal.Direccion</td>
                        <td>@sucursal.CiudadNombre</td>
                        <td>@sucursal.DepartamentoNombre</td>
                        <td>@sucursal.Telefono</td>
                        <td class="acciones">
                            <a asp-page="EditarSucursal" asp-route-id="@sucursal.Id" class="btn btn-action" title="Editar">
                                <i class="fas fa-edit"></i>
                            </a>
                            <button class="btn btn-action btn-eliminar"
                                    data-id="@sucursal.Id"
                                    data-nombre="@sucursal.Nombre"
                                    title="Eliminar">
                                <i class="fas fa-trash-alt"></i>
                            </button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <!-- Paginación idéntica a Inventario -->
    <div class="paginacion">
        <nav aria-label="Page navigation">
            <ul class="pagination">
                @for (int i = 1; i <= Model.TotalPaginas; i++)
                {
                    var url = $"/Sucursales?pagina={i}" +
                    $"&sortColumn={Model.SortColumn}" +
                    $"&sortDirection={Model.SortDirection}" +
                    $"&departamento={Model.DepartamentoFilter}" +
                    $"&ciudad={Model.CiudadFilter}" +
                    $"&busqueda={Model.BusquedaFilter}";

                    <li class="page-item @(i == Model.PaginaActual ? "active" : "")">
                        <a class="page-link" href="@url">@i</a>
                    </li>
                }
            </ul>
        </nav>
    </div>
</div>

<!-- Modal de confirmación con estilos idénticos -->
<div class="modal fade" id="confirmarEliminarModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header beige-bg">
                <h5 class="modal-title beige-text">Confirmar Eliminación</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                ¿Está seguro que desea eliminar la sucursal <strong id="nombreSucursalEliminar"></strong>?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                <button type="button" class="btn btn-danger" id="btn-confirmar-eliminar">Eliminar</button>
            </div>
        </div>
    </div>
</div>

@section Styles {
    <!-- Usar mismo archivo CSS que Inventario -->
    <link rel="stylesheet" href="~/Styles/Style_Inventario.css" asp-append-version="true" />
}

@section Scripts {
    <script>
        // Ordenamiento de columnas (idéntico a Inventario)
        document.querySelectorAll('.sort-link').forEach(link => {
            link.addEventListener('click', function (e) {
                e.preventDefault();
                const column = this.closest('th').dataset.sortColumn;
                const currentOrder = '@Model.SortDirection';
                const newOrder = currentOrder === 'ASC' ? 'DESC' : 'ASC';

                // Mantener filtros en la URL
                const url = new URL(window.location.href);
                url.searchParams.set('sortColumn', column);
                url.searchParams.set('sortDirection', newOrder);
                url.searchParams.set('pagina', '1');

                window.location.href = url.toString();
            });
        });

        // Eliminación (idéntico a Inventario)
        let sucursalAEliminar = null;
        document.querySelectorAll('.btn-eliminar').forEach(btn => {
            btn.addEventListener('click', function () {
                sucursalAEliminar = {
                    id: this.getAttribute('data-id'),
                    nombre: this.getAttribute('data-nombre')
                };

                document.getElementById('nombreSucursalEliminar').textContent = sucursalAEliminar.nombre;
                const modal = new bootstrap.Modal(document.getElementById('confirmarEliminarModal'));
                modal.show();
            });
        });

        document.getElementById('btn-confirmar-eliminar').addEventListener('click', function () {
            if (sucursalAEliminar) {
                fetch(`/Sucursales/Eliminar/${sucursalAEliminar.id}`, {
                    method: 'POST',
                    headers: {
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value,
                        'Content-Type': 'application/json'
                    }
                }).then(response => {
                    if (response.ok) {
                        window.location.reload();
                    } else {
                        alert('Error al eliminar la sucursal');
                    }
                }).catch(error => {
                    console.error('Error:', error);
                    alert('Error al eliminar la sucursal');
                });
            }
        });

        // Aplicar filtros (idéntico a Inventario)
        document.getElementById('btn-aplicar-filtros').addEventListener('click', function () {
            const departamento = document.getElementById('filtro-departamento').value;
            const ciudad = document.getElementById('filtro-ciudad').value;
            const busqueda = document.getElementById('filtro-busqueda').value;

            const url = new URL(window.location.href);
            url.searchParams.set('pagina', '1');
            url.searchParams.set('sortColumn', '@Model.SortColumn');
            url.searchParams.set('sortDirection', '@Model.SortDirection');
            if (departamento) url.searchParams.set('departamento', departamento);
            if (ciudad) url.searchParams.set('ciudad', ciudad);
            if (busqueda) url.searchParams.set('busqueda', busqueda);

            window.location.href = url.toString();
        });

        // Cargar ciudades cuando cambia departamento
        document.getElementById('filtro-departamento').addEventListener('change', function () {
            const departamentoId = this.value;
            const ciudadSelect = document.getElementById('filtro-ciudad');

            if (!departamentoId) {
                ciudadSelect.innerHTML = '<option value="">Todas</option>';
                ciudadSelect.disabled = true;
                return;
            }

            fetch(`?handler=CiudadesPorDepartamento&departamentoId=${departamentoId}`)
                .then(response => response.json())
                .then(data => {
                    let options = '<option value="">Todas</option>';
                    data.forEach(ciudad => {
                        options += `<option value="${ciudad.id}">${ciudad.nombre}</option>`;
                    });
                    ciudadSelect.innerHTML = options;
                    ciudadSelect.disabled = false;
                });
        });
    </script>
}